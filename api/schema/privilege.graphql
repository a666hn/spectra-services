type PrivilegeQuery {
    # Role Section Query
    getListRole(request: GetPaginationRoleRequest!): RoleMultiResponse!
}

type PrivilegeMutation {
    # Role Section Mutation
    addRole(request: InputRole!): RoleResponseWithMessage!
    updateRole(id: String!, name: String!, description: String!): RoleResponseWithMessage!
    deleteRole(id: String!): RoleResponseWithMessage!
}

type ResponseWithMessage {
    id: String!
    message: String!
}

#   ==================  #
#   | Request Section   #
#   \================   #

# Role Request Type
type RoleData {
    id: String!
    role: String!
    description: String!
}

type OptionRoleData {
    value: String!
    label: String!
}

input InputRole {
    name: String!
    description: String!
}

input GetPaginationRoleRequest {
    page: Int
    perpage: Int
    name: String!
}

#   ===================  #
#   | Response Section   #
#   \=================   #

# Role Response Type
type OptionRoleResponse {
    results: [OptionRoleData!]!
}

type RoleResponseWithMessage {
    result: ResponseWithMessage!
}

type RoleMultiResponse {
    page: Int
    perpage: Int
    totalPage: Int
    maxPage: Int
    results: [RoleData!]!
}